If you are using Windows, pleas*.txte view using WORDPAD software instead of NOTEPAD software..txt

RAW
201601.txt through 201612.txt
    - Raw datasets retreived from GDELT Google Big Query table
    - Sample script to retrieve data for month of August 2016 as follows
        - sudo bq query --batch  --format=csv --destination_table=complexexport.201608 --headless "SELECT '201608' as YearMonth,count(*) as NoOfEvents, sum(GoldsteinScale)/count(*) as GoldStein, sum(AvgTone)/count(*) as ToneCount ,Actor1CountryCode , Actor2CountryCode  FROM  [gdelt-bq:gdeltv2.events] WHERE Actor1CountryCode<>'null'  and Actor2CountryCode<>'null' and Actor1CountryCode<>Actor2CountryCode and SQLDATE between 20160801 and 20160831 group by  Actor1CountryCode , Actor2CountryCode  having NoOfEvents>10 order by Actor1CountryCode, Actor2CountryCode"
        - sudo bq extract --compression=GZIP --destination_format=CSV complexexport.201608 gs://complexbucket/201608.txt.zip
        - sudo gsutil cp gs://complexbucket/*.zip .
    - Format (csv)
        - [YearMonth], [NoOfEvents], [GoldStein], [ToneCount], [Actor1CountryCode], [Actor2CountryCode]
        - YearMonth: The yyyyMM of this this consolidation
        - NoOfEvents: The no of of events in this consolidation
        - GoldStein: The summmed GoldStein value
        - Tonecount: The summed sentiment value
        - Actor1CountryCode: From which country
        - Actor2CountryCode: To which country

201601_GOV.txt through 201612_GOV.txt
    - Structure same as above but data slightly different such that this must contain at least one government actor.
    - Raw datasets retreived from GDELT Google Big Query table
    - Sample script to retrieve data for month of August 2016 as follows
        - sudo bq query --batch  --format=csv --destination_table=complexexport.201608 --headless "SELECT '201608' as YearMonth,count(*) as NoOfEvents, sum(GoldsteinScale)/count(*) as GoldStein, sum(AvgTone)/count(*) as ToneCount ,Actor1CountryCode , Actor2CountryCode  FROM  [gdelt-bq:gdeltv2.events] WHERE Actor1CountryCode<>'null'  and Actor2CountryCode<>'null' and Actor1CountryCode<>Actor2CountryCode and (Actor1Type1Code='GOV' OR Actor2Type1Code='GOV') and  SQLDATE between 20160801 and 20160831 group by  Actor1CountryCode , Actor2CountryCode  having NoOfEvents>10 order by Actor1CountryCode, Actor2CountryCode"
        - sudo bq extract --compression=GZIP --destination_format=CSV complexexport.201608 gs://complexbucket/201608_GOV.txt.zip
        - sudo gsutil cp gs://complexbucket/*.zip .
    - Format (csv)
        - [YearMonth], [NoOfEvents], [GoldStein], [ToneCount], [Actor1CountryCode], [Actor2CountryCode]
        - YearMonth: The yyyyMM of this this consolidation
        - NoOfEvents: The no of of events in this consolidation
        - GoldStein: The summmed GoldStein value
        - Tonecount: The summed sentiment value
        - Actor1CountryCode: From which country
        - Actor2CountryCode: To which country


UNCountryCode.txt
    - UN Country list retrieved from ISO-3166 Codes, http://data.gdeltproject.org/documentation/CAMEO.Manual.1.1b3.pdf,  Pg 168-173.
    - Format (csv)
        - [Country name], [UN Country Code]
        - Long form country name (E.g. Great Britain)
        - UN Code: E.g: GBR


country.txt
	- Processed UNcountryCode.txt to CSV

countrygeo.txt
	-geocode output from geocode tool

*********************
PROCESSED

201601_stripped.txt through 201612_stripped.txt
    - Stripped by Excel to just retain src, tgt and tone
    - Format (csv)
        - [Src], [Tgt], [Tone]
        - Src: Represents the Actor1CountryCode
        - Tgt: Represents Actor2CountryCode
        - Tone: Represents the summed tone (sentiments) for this edge

201601_GOV_stripped.txt through 201612_GOV_stripped.txt
    - Stripped by Excel to just retain src, tgt and tone
    - Format (csv)
        - [Src], [Tgt], [Tone]
        - Src: Represents the Actor1CountryCode
        - Tgt: Represents Actor2CountryCode
        - Tone: Represents the summed tone (sentiments) for this edge






--- SmallWorld ---
randomDG.txt
    - Random graph generated by NetworkX/Python.  create_randomgraph() and saveGraphAsCSV() functions

Final201608edge.txt
    - Processed the raw data by NetworkX and Excel
    - Unweighted global edgelist for the month of Aug 2016.
    - Invalid UN Country names removed (Used by NetworkX)
    - Format (csv)
        - [Src], [Tgt]
        - Src: Represents the Actor1CountryCode
        - Tgt: Represents Actor2CountryCode

randomDG.gephi
    - Gephi graph containing randomDG.txt
    - Used to perform statistics computation

nDG.gephi
    - Gephu graph containing Final201608edge.txt
    - Used to perform statistics computation



--- Degree Distribution ---
FinalNodesList.txt
    - Process the raw data by NetworkX and Excel
    - Used as nodes list input to GeoGraph.gephi
    - Format (csv)
        - [Id],[Label],[LAT],[LNG]
        - Id: Country code
        - Label: Country name
        - LAT: Latitude
        - LNG: Longitude

Final201608edge.txt
    - Processed the raw data by NetworkX and Excel
    - Unweighted global edgelist for the month of Aug 2016.
    - Used to generate Degree Distribution diagrams (Used by NetworkX) in plot_degree_distribution_bined() function
    - Format (csv)
        - [Src], [Tgt]
        - Src: Represents the Actor1CountryCode
        - Tgt: Represents Actor2CountryCode


GeoGraph.gephi
    - Gephi graph containing both below.
    - FinalNodesList.txt and Final201608edge.txt
    - Used to perform statistics computation




--- Centrality ---
Centrality.txt
    - Exported dataset from GeoGraph.gephi
    - Format (csv)
        - [id],[label],[lat],[lng],[indegree],[outdegree],[closnesscentrality],[betweenesscentrality]
        - id: Country code
        - label: Country name
        - lat: Latitude
        - lng: Longitude
        - indegree: unweighted indegree
        - outdegree: unweighted outdegree
        - closnesscentrality: Computed closeness
        - betweenesscentrality: Computed betweenness

WeightedDegreeCentrality.txt
    - Exported dataset from GeoGraph.gephi
    - To be used in Tableau.
    - Format (csv)
        - [id],[label],[lat],[lng],[weighted_indegree],[weighted_outdegree]
        - id: Country code
        - label: Country name
        - lat: Latitude
        - lng: Longitude
        - indegree: weighted indegree
        - outdegree: weighted outdegree


Centrality.twb
    - Tableau file containing centrality.txt
    - Used to visualise centrality metrics on the map.

WeightedDegreeCentrality.twb
    - Tableau file containing centrality.txt





--- Opinion Reciprocal ---
201608_WeightedCleansed.txt
    - Processed the raw data by NetworkX and Excel
    - Weighted global edgelist for the month of Aug 2016.
    - Used as input to the checkSuccessorCorrelation() and checkPredecessorCorrelation() functions
    - Format (csv)
        - [Src], [Tgt], [Tone]
        - Src: Represents the Actor1CountryCode
        - Tgt: Represents Actor2CountryCode
	- Tone: Represents the tone/weight

Results.txt
    - Text output from the checkSuccessorCorrelation() and checkPredecessorCorrelation() python functions




--- Structural Balance ---
201601_WeightedCleansedPruned_SEA4_signed.txt through 201611_WeightedCleansedPruned_SEA4_signed.txt
    - Processed by NetworkX/Python balancecheckoneyear() function
    - Jan 2016 to Nov 2016
    - Pruned edge lists (Signed) to just display 3 main countries in South East Asia (SGP, MYS, IND)
    - To be used by Signed_Balance.cys
    - Format (csv)
        - [src], [tgt], [sign]
        - src: Represented by Actor1CountryCode
        - tgt: Represented by Actor2CountryCode
        - sign: either 1 or -1 (Derived from Tone)


201601_WeightedCleansedPruned_SEA4_GOV_signed.txt through 201611_WeightedCleansedPruned_SEA4_GOV_signed.txt
    - Processed by NetworkX/Python balancecheckoneyear() function
    - Jan 2016 to Nov 2016
    - Pruned edge lists (Signed) to just display 3 main countries in South East Asia (SGP, MYS, IND)
    - To be used by Signed_Balance.cys
    - Format (csv)
        - [src], [tgt], [sign]
        - src: Represented by Actor1CountryCode
        - tgt: Represented by Actor2CountryCode
        - sign: either 1 or -1 (Derived from Goldstein)

201601_WeightedCleansedPruned_WORLD4_GOV_signed.txt through 201611_WeightedCleansedPruned_WORLD4_GOV_signed.txt
    - Processed by NetworkX/Python balancecheckoneyear() function
    - Jan 2016 to Nov 2016
    - Pruned edge lists (Signed) to just display 4 main countries in World (USA, GBR, CHN, RUS)
    - To be used by Signed_Balance.cys
    - Format (csv)
        - [src], [tgt], [sign]
        - src: Represented by Actor1CountryCode
        - tgt: Represented by Actor2CountryCode
        - sign: either 1 or -1 (Derived from Goldstein)


Signed_Balance.cys
    - Cytoscape file to display signed graph for the 3 main countries in South East Asia (SGP, MYS, IND)
    - Cytoscape file to display signed graph for the 4 main countries in Global (USA,GBR,CHN,RUS)
    - Uses 201601_WeightedCleansedPruned_SEA4_signed.txt through 201611_WeightedCleansedPruned_SEA4_signed.txt
    - Uses 201601_WeightedCleansedPruned_SEA4_GOV_signed.txt through 201611_WeightedCleansedPruned_SEA4_GOV_signed.txt
    - Uses 201601_WeightedCleansedPruned_WORLD4_GOV_signed.txt through 201611_WeightedCleansedPruned_WORLD4_GOV_signed.txt



